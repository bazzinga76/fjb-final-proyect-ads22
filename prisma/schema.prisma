datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  title     String     @default("SIN TITULO")
  content   String?
  published Boolean    @default(false)
  viewCount Int        @default(0)
  author    User       @relation(fields: [authorId], references: [id])
  authorId  String     @db.ObjectId
  createdAt DateTime?  @default(now())
  updatedAt DateTime?  @default(now())
  reactions Reaction[]
  comments  Comment[]
}

model User {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  email     String     @unique
  name      String
  createdAt DateTime?  @default(now())
  updatedAt DateTime?  @default(now())
  posts     Post[]
  reactions Reaction[]
  comments  Comment[]
}

model Reaction {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @db.ObjectId
  Post      Post?     @relation(fields: [postId], references: [id])
  postId    String?   @db.ObjectId
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

}

model Comment {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
  post      Post      @relation(fields: [postId], references: [id])
  postId    String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
}

model Student {
  id               String       @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  paternal_surname String
  maternal_surname String
  birth_date       DateTime
  admission_date   DateTime
  email            String       @unique
  createdAt        DateTime?    @default(now())
  updatedAt        DateTime?    @default(now())
  reportCard       ReportCard[]
}

model Teacher {
  id               String             @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  paternal_surname String
  maternal_surname String
  birth_date       DateTime
  admission_date   DateTime
  email            String             @unique
  createdAt        DateTime?          @default(now())
  updatedAt        DateTime?          @default(now())
  ReportCardDetail ReportCardDetail[]
}

model Subject {
  id               String             @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  description      String
  createdAt        DateTime?          @default(now())
  updatedAt        DateTime?          @default(now())
  ReportCardDetail ReportCardDetail[]
}

model ReportCard {
  id                  String             @id @default(auto()) @map("_id") @db.ObjectId
  student             Student            @relation(fields: [studentId], references: [id])
  studentId           String             @db.ObjectId
  class               String             @default("")
  schoolYear          String             @default("")
  score               Float              @default(0)
  period              String             @default("")
  description         String             @default("")
  evaluationStartDate DateTime           @default(now())
  evaluationEndDate   DateTime           @default(now())
  createdAt           DateTime?          @default(now())
  updatedAt           DateTime?          @default(now())
  ReportCardDetail    ReportCardDetail[]
}

model ReportCardDetail {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  reportCard   ReportCard @relation(fields: [reportCardId], references: [id])
  reportCardId String     @db.ObjectId
  teacher      Teacher    @relation(fields: [teacherId], references: [id])
  teacherId    String     @db.ObjectId
  subject      Subject    @relation(fields: [subjectId], references: [id])
  subjectId    String     @db.ObjectId
  score        Float      @default(0)
  description  String     @default("")
  passed       Boolean    @default(false)
  try          Int        @default(0)
  createdAt    DateTime?  @default(now())
  updatedAt    DateTime?  @default(now())
}
