datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongodb"]
}

model Post {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  title     String     @default("SIN TITULO")
  content   String?
  published Boolean    @default(false)
  author    User       @relation(fields: [authorId], references: [id])
  authorId  String     @db.ObjectId
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  reactions Reaction[]
  comments  Comment[]
}

model User {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  email     String     @unique
  name      String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  posts     Post[]
  reactions Reaction[]
  comments  Comment[]
}

model Reaction {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  Post      Post?    @relation(fields: [postId], references: [id])
  postId    String?  @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Students {
  id               String         @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  paternal_surname String
  maternal_surname String
  birth_date       DateTime
  admission_date   DateTime
  email            String         @unique
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now())
  Report_cards     Report_cards[]
}

model Teachers {
  id               String         @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  paternal_surname String
  maternal_surname String
  birth_date       DateTime
  admission_date   DateTime
  email            String         @unique
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now())
  Report_cards     Report_cards[]
}

model Subjects {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  description  String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now())
  Report_cards Report_cards[]
}

model Report_cards {
  id                    String   @id @default(auto()) @map("_id") @db.ObjectId
  student               Students @relation(fields: [studentId], references: [id])
  studentId             String   @db.ObjectId
  subject               Subjects @relation(fields: [subjectId], references: [id])
  subjectId             String   @db.ObjectId
  teacher               Teachers @relation(fields: [teacherId], references: [id])
  teacherId             String   @db.ObjectId
  class                 String
  school_year           String
  score                 Float
  period                String
  description           String
  passed                Boolean
  evaluation_start_date DateTime
  evaluation_end_date   DateTime
  createdAt             DateTime @default(now())
  updatedAt             DateTime @default(now())
}
